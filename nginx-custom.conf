server {
    listen 80;
    include mine.type;
    location / {
        try_files $uri $uri/ /index.html;
        root /usr/local/openresty/nginx/html/portal;
        index index.htm index.html;

    }

    location /load {
        alias /usr/local/openresty/nginx/html;
        index index.htm index.html;
    }

    location ~ /services/([0-9a-z\-]+)/(.*) {
        set $target '';
        access_by_lua_block {
            local key = ngx.var[1]
                if not key then
                    ngx.log(ngx.ERR, "no service found")
                    return ngx.exit(400)
                end

            local redis = require "resty.redis"
            local red = redis:new()
            red:set_timeout(1000) -- 1 second
            local ok, err = red:connect(os.getenv("REDIS_HOST"), 6379)
            if not ok then
                ngx.log(ngx.ERR, "failed to connect to redis: ", err)
                return ngx.exit(500)
            end
            local host, err = red:get('proxy:'..key)
            if not host then
                ngx.log(ngx.ERR, "failed to get redis key: ", err)
                return ngx.exit(500)
            end
            if host == ngx.null then
                ngx.log(ngx.ERR, "no host found for key ", key)
                return ngx.exit(400)
            end
            ngx.var.target = host
            ngx.log(ngx.ERR,"proxy: ", host)
        }
        resolver 172.16.0.254;
        proxy_pass http://$target/$2$is_args$args;
    }

    location /api/ {
        proxy_pass http://127.0.0.1:8000/;
    }
}
